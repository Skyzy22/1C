

Процедура ПроставитьПрочеркиВПустыеПоля(ОбластьМакета)
	
	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если (Найти(ТекПараметр, "Продавец:") <> 0)
			и (СокрЛП(ТекПараметр) = "Продавец:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Продавец: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Адрес:") <> 0)
			и (СокрЛП(ТекПараметр) = "Адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер продавца (ИНН):") <> 0)
			и (СокрЛП(ТекПараметр) = "Идентификационный номер продавца (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер продавца (ИНН): ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузоотправитель и его адрес:") <> 0)
			и (СокрЛП(ТекПараметр) = "Грузоотправитель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузоотправитель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузополучатель и его адрес:") <> 0)
			и (СокрЛП(ТекПараметр) = "Грузополучатель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузополучатель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "К платежно-расчетному документу №") <> 0)
			и (СокрЛП(ТекПараметр) = "К платежно-расчетному документу №  от") Тогда
			ОбластьМакета.Параметры.Установить(т, "К платежно-расчетному документу № -- от --");
			
		ИначеЕсли (Найти(ТекПараметр, "Покупатель:") <> 0)
			и (СокрЛП(ТекПараметр) = "Покупатель:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Покупатель: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер покупателя (ИНН):") <> 0)
			и (СокрЛП(ТекПараметр) = "Идентификационный номер покупателя (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер покупателя (ИНН): ----");
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПроставитьПрочеркиВПустыеПоля()

Функция СобратьДанныеПоОтчетКомитентуОПродажах()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументОснование.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация   КАК Поставщик,
	|	Организация   КАК Грузоотправитель,
	|	Контрагент    КАК Покупатель,
	|	Контрагент    КАК Грузополучатель,
	|	Организация.ЮрФизЛицо   КАК ЮрФизЛицо,
	|	Организация.ОГРН   		КАК ОГРН,
	|	СуммаДокумента          КАК Сумма,
	|	СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ВалютаДокумента         КАК Валюта,
	|	Товары.(
	|		СУММА(СуммаВознаграждения)    КАК Сумма,
	|		СУММА(СуммаНДСВознаграждения) КАК СуммаНДС	
	|	)
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка = &ДокументОснование";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.Дата);
	ДанныеДляПечати.Вставить("НомерПРД",         СсылкаНаОбъект.НомерПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("ДатаПРД",          СсылкаНаОбъект.ДатаПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Истина);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Истина);
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, СсылкаНаОбъект.Дата,);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       Руководители.Руководитель);
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	
	ТекстПБОЮЛ = ПолучитьФИОПредпринимателя(Шапка.Организация, СсылкаНаОбъект.Дата, Шапка.ЮрФизЛицо);
	ДанныеДляПечати.Вставить("ФИОПБОЮЛ", 			  ТекстПБОЮЛ);
	
	Если ЗначениеЗаполнено(ТекстПБОЮЛ) Тогда
		// Если это ИЧП
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "ОГРНИП: " + Шапка.ОГРН);
	Иначе
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "");
	КонецЕсли;
	
	Товары = ИнициализацияТаблицыСтрок();
	
	Если ВыборкаСтрокТовары.Следующий() Тогда
		Строчка = Товары.Добавить();
		Строчка.Товар               = "Комиссионное вознаграждение";
		Строчка.ТоварНаименование   = "Комиссионное вознаграждение";
		Строчка.СтранаПроисхождения = "";
		Строчка.ПредставлениеСтраны = "";
		Строчка.НомерГТД            = "";
		Строчка.ПредставлениеГТД    = "";
		Строчка.Количество          = 0;
		Строчка.ЕдиницаИзмерения    = "";
		Строчка.СтавкаНДС = Шапка.СтавкаНДС;
		СуммаДляПечати    = ?(ВыборкаСтрокТовары.Сумма = Null, 0, ВыборкаСтрокТовары.Сумма);
		Строчка.СуммаНДС  = ?(ВыборкаСтрокТовары.СуммаНДС = Null, 0, ВыборкаСтрокТовары.СуммаНДС);
		Строчка.Сумма     = СуммаДляПечати;
		Строчка.Цена      = 0;
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);
	ДанныеДляПечати.Вставить("ТолькоУслуги",   Истина);
	
	Возврат ДанныеДляПечати;
	
КонецФункции // СобратьДанныеПоОтчетКомитентуОПродажах()

Функция ИнициализацияТаблицыСтрок()
	
	Товары = Новый ТаблицаЗначений();
	
	Товары.Колонки.Добавить("Товар");
	Товары.Колонки.Добавить("ТоварНаименование");
	Товары.Колонки.Добавить("СтранаПроисхождения");
	Товары.Колонки.Добавить("ПредставлениеСтраны");
	Товары.Колонки.Добавить("НомерГТД");
	Товары.Колонки.Добавить("ПредставлениеГТД");
	Товары.Колонки.Добавить("Количество");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("Цена");
	Товары.Колонки.Добавить("СтавкаНДС");
	Товары.Колонки.Добавить("СуммаНДС");
	Товары.Колонки.Добавить("Сумма");
	
	Возврат Товары;
	
КонецФункции

Функция ПолучитьФИОПредпринимателя(Организация, ДатаСреза, ЮрФизЛицо)
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("Организация", Организация);
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   ДатаСреза);
		ЗапросПоЛицам.Текст = "
		|ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" КАК ФИОПолное
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаСреза, ФизЛицо = &Организация) КАК ФИОФизЛицСрезПоследних";
		
		Выборка = ЗапросПоЛицам.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.ФИОПолное;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Функция собирает данные по документу основанию ОтчетаКомисиионера и 
// возвращает типизированную структуру с данными
// 
Функция СобратьДанныеПоОтчетКомиссионераОПродажах()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументОснование.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация   КАК Поставщик,
	|	Организация   КАК Грузоотправитель,
	|	Организация.ЮрФизЛицо   КАК ЮрФизЛицо,
	|	Организация.ОГРН   		КАК ОГРН,
	|	Контрагент    КАК Покупатель,
	|	Контрагент    КАК Грузополучатель,
	|	СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	СуммаДокумента          КАК Сумма,
	|	ВалютаДокумента         КАК Валюта,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС,
	|	Товары.(
	|		Номенклатура КАК Товар,
	|		ВЫРАЗИТЬ (Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|		СерияНоменклатуры.СтранаПроисхождения                    КАК СтранаПроисхождения,
	|		СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|		СерияНоменклатуры.НомерГТД                               КАК НомерГТД,
	|		СерияНоменклатуры.НомерГТД.Представление                 КАК ПредставлениеГТД,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	)
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка = &ДокументОснование";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.Дата);
	ДанныеДляПечати.Вставить("НомерПРД",         СсылкаНаОбъект.НомерПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("ДатаПРД",          СсылкаНаОбъект.ДатаПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Шапка.СуммаВключаетНДС);
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, СсылкаНаОбъект.Дата,);
	//ДанныеДляПечати.Вставить("ФИОРуководителя",       Руководители.Руководитель);
	//ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	//Гагин Н.А. Начало	
	ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",СсылкаНаОбъект.Ссылка.Ответственный.ФизЛицо.Ссылка));
	Фамилия  = ФИОСрез.Фамилия;
	Имя      = ФИОСрез.Имя;
	Отчество = ФИОСрез.Отчество;
	ФамилияИмяОтчествоОтветственного = Фамилия + " " + Имя + " " + Отчество;
	ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	//Гагин Н.А. Конец	
	
	ТекстПБОЮЛ = ПолучитьФИОПредпринимателя(Шапка.Организация, СсылкаНаОбъект.Дата, Шапка.ЮрФизЛицо);
	ДанныеДляПечати.Вставить("ФИОПБОЮЛ", 			  ТекстПБОЮЛ);
	
	Если ЗначениеЗаполнено(ТекстПБОЮЛ) Тогда
		// Если это ИЧП
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "ОГРНИП: " + Шапка.ОГРН);
	Иначе
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "");
	КонецЕсли;
	
	Товары = ИнициализацияТаблицыСтрок();
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.Товар;
		Строчка.ТоварНаименование   = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование);
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СтавкаНДС           = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС            = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма;
		Строчка.Цена                = (ВыборкаСтрокТовары.Сумма - ВыборкаСтрокТовары.СуммаНДС) / ВыборкаСтрокТовары.Количество;
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);
	
	Возврат ДанныеДляПечати;
	
КонецФункции // СобратьДанныеПоОтчетКомиссионераОПродажах()

// Функция собирает данные по документу основанию реализации и возвращает типизированную 
// структуру с данными
// 
Функция СобратьДанныеПоРеализацияТоваровУслуг()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументПередачи.Ссылка);
	Запрос.УстановитьПараметр("ПустойКонтрагент",  Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Организация,
	|	Организация                       КАК Поставщик,
	|	Грузоотправитель                  КАК Грузоотправитель,
	|	Организация.ЮрФизЛицо             КАК ЮрФизЛицо,
	|	Организация.ОГРН                  КАК ОГРН,
	|	Контрагент                        КАК Покупатель,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	|	СуммаДокумента                    КАК Сумма,
	|	ВалютаДокумента                   КАК Валюта,
	|	УчитыватьНДС                      КАК УчитыватьНДС,
	|	СуммаВключаетНДС                  КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументПередачи.Ссылка);
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Товар,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	РеализацияТоваровУслугТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	РеализацияТоваровУслугТовары.СерияНоменклатуры КАК Серия,
	|	РеализацияТоваровУслугТовары.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	РеализацияТоваровУслугТовары.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	РеализацияТоваровУслугТовары.СерияНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
	|	РасходныйОрдерНаТоварыТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.Сумма / РеализацияТоваровУслугТовары.Количество * РасходныйОрдерНаТоварыТовары.Количество КАК Сумма,
	|	РеализацияТоваровУслугТовары.СуммаНДС / РеализацияТоваровУслугТовары.Количество * РасходныйОрдерНаТоварыТовары.Количество КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	|	1 КАК Метка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО РасходныйОрдерНаТоварыТовары.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	|       И РеализацияТоваровУслугТовары.Качество = РасходныйОрдерНаТоварыТовары.Качество
	|ГДЕ
	|	РасходныйОрдерНаТоварыТовары.Ссылка = &ТекущийДокумент
	|	И РеализацияТоваровУслугТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугУслуги.Номенклатура,
	|	РеализацияТоваровУслугУслуги.Содержание,
	|	NULL,
	|	NULL,
	|	NULL,
	|	"""",
	|	РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	|	NULL,
	|	"""",
	|	РеализацияТоваровУслугУслуги.Количество,
	|	РеализацияТоваровУслугУслуги.Цена,
	|	РеализацияТоваровУслугУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	РеализацияТоваровУслугУслуги.Сумма,
	|	РеализацияТоваровУслугУслуги.НомерСтроки,
	|	2
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Метка,
	|	НомерСтроки";
	
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	
	Можно = 0;
	СтрОтбора = новый Структура;
	СтрОтбора.Вставить("ДокументОснование",СсылкаНаОбъект.ДокументПередачи);
	Счф = Документы.СчетФактураВыданный.Выбрать(,,СтрОтбора);
	Пока Счф.Следующий() ЦИкл
		Если Счф.ДокументОснование = СсылкаНаОбъект.ДокументПередачи Тогда
			НужнаяСчФ = Счф.Ссылка;
			Можно = 1;			
		КонецЕсли;
	КонецЦикла;
	
	Если Можно = 0 Тогда
		ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
		ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.Дата);
	Иначе
		ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.Дата);
		ДанныеДляПечати.Вставить("Номер",            НужнаяСчФ.Номер);
		//ДанныеДляПечати.Вставить("Дата",             НужнаяСчФ.Дата);
	КонецЕсли;
	ДанныеДляПечати.Вставить("НомерПРД",         "-");
	ДанныеДляПечати.Вставить("ДатаПРД",          "-");
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Шапка.СуммаВключаетНДС);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, СсылкаНаОбъект.Дата,);
	//ДанныеДляПечати.Вставить("ФИОРуководителя",       Руководители.Руководитель);
	//ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	
	//Гагин Н.А. Начало	
	Если ВидНакл = "Леруа" ИЛИ ВидНакл = "Оби" ИЛИ ВидНакл = "Максидом" ИЛИ ВидНакл = "Касторама" Тогда
		//Если Шапка.Грузоотправитель = Константы.хз_Грзоотправитель.Получить() Тогда
		//	ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",СсылкаНаОбъект.Ответственный.ФизЛицо.Ссылка));
		//	Фамилия  = ФИОСрез.Фамилия;
		//	Имя      = ФИОСрез.Имя;
		//	Отчество = ФИОСрез.Отчество;
		//	ФамилияИмяОтчествоОтветственного = Фамилия + " " + Имя + " " + Отчество;
		//	ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
		//	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
		//Иначе
		//	Руководители = хз_ОтветственныеЛицаКонтрагента(Шапка.Грузоотправитель, СсылкаНаОбъект.Дата,);
		//	Если НЕ Руководители.Руководитель = Неопределено Тогда
		//		Руководитель = Руководители.Руководитель.Наименование;
		//		ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(Руководитель));
		//	КонецЕсли;
		//	Если НЕ Руководители.ГлавныйБухгалтер = Неопределено Тогда
		//		Бухгалтер    = Руководители.ГлавныйБухгалтер.Наименование;
		//		ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(Бухгалтер));
		//		ДанныеДляПечати.Вставить("ОписаниеГлавБух", Руководители.ГлавныйБухгалтер.Описание);
		//	КонецЕсли;
		//КонецЕсли;
	Иначе	
		ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",СсылкаНаОбъект.Ответственный.ФизЛицо.Ссылка));
		Фамилия  = ФИОСрез.Фамилия;
		Имя      = ФИОСрез.Имя;
		Отчество = ФИОСрез.Отчество;
		ФамилияИмяОтчествоОтветственного = Фамилия + " " + Имя + " " + Отчество;
		ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
		ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	КонецЕсли;
	//Гагин Н.А. Конец	
	
	ТекстПБОЮЛ = ПолучитьФИОПредпринимателя(Шапка.Организация, СсылкаНаОбъект.Дата, Шапка.ЮрФизЛицо);
	ДанныеДляПечати.Вставить("ФИОПБОЮЛ", 			  ТекстПБОЮЛ);
	
	Если ЗначениеЗаполнено(ТекстПБОЮЛ) Тогда
		// Если это ИЧП
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "ОГРНИП: " + Шапка.ОГРН);
	Иначе
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "");
	КонецЕсли;
	
	Товары = ИнициализацияТаблицыСтрок();
	
	ТолькоУслуги = Истина;
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.Товар;
		Строчка.ТоварНаименование   = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование) + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаСтрокТовары);
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.Цена                = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС           = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС            = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма;
		
		Если ВыборкаСтрокТовары.Метка = 1 Тогда
			// Если есть хотя бы одна строка из табличной части "Товары" - значит не только услуги
			ТолькоУслуги = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);
	ДанныеДляПечати.Вставить("ТолькоУслуги",   ТолькоУслуги);
	
	Возврат ДанныеДляПечати;
	
КонецФункции // СобратьДанныеПоРеализацияТоваровУслуг()

// Функция собирает данные по документу основанию ОтражениеРеализацииТоваровИУслуг возвращает типизированную 
// структуру с данными
// 
Функция СобратьДанныеПоОтражениюРеализацииТоваровИУслуг()
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументОснование.Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Организация,
	|	Организация КАК Поставщик,
	|	Организация КАК Грузоотправитель,
	|	Организация.ЮрФизЛицо   КАК ЮрФизЛицо,
	|	Организация.ОГРН   		КАК ОГРН,
	|	Контрагент  КАК Покупатель,
	|	Контрагент  КАК Грузополучатель,
	|	СуммаДокумента	 КАК Сумма,
	|	""""			 КАК Валюта,
	|	Истина			 КАК УчитыватьНДС,
	|	Ложь			 КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ОтражениеРеализацииТоваровИУслугНДС КАК ОтражениеРеализацииТоваровИУслугНДС
	|
	|ГДЕ
	|	ОтражениеРеализацииТоваровИУслугНДС.Ссылка = &ДокументОснование";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект.ДокументОснование.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Номенклатура КАК Товар,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Номенклатура.Представление КАК ТоварНаименование,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК ПредставлениеСтраны,
	|	"""" КАК НомерГТД,
	|	"""" КАК ПредставлениеГТД,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Количество,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.ЕдиницаИзмерения,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.ЕдиницаИзмерения.Представление КАК ПредставлениеЕдиницыИзмерения,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Цена,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.СтавкаНДС,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.СуммаНДС,
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Сумма
	|ИЗ
	|	Документ.ОтражениеРеализацииТоваровИУслугНДС.ТоварыИУслуги КАК ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги
	
	|ГДЕ
	|	ОтражениеРеализацииТоваровИУслугНДСТоварыИУслуги.Ссылка = &ДокументОснование
	
	|УПОРЯДОЧИТЬ ПО
	|	Товар";
	
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            СсылкаНаОбъект.Номер);
	ДанныеДляПечати.Вставить("Дата",             СсылкаНаОбъект.Дата);
	ДанныеДляПечати.Вставить("НомерПРД",         СсылкаНаОбъект.НомерПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("ДатаПРД",          СсылкаНаОбъект.ДатаПлатежноРасчетногоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            0);
	ДанныеДляПечати.Вставить("Валюта",           мВалютаРегламентированногоУчета);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Истина);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Ложь);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, СсылкаНаОбъект.Дата,);
	//ДанныеДляПечати.Вставить("ФИОРуководителя",       Руководители.Руководитель);
	//ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	//Гагин Н.А. Начало	
	ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",СсылкаНаОбъект.Ссылка.Ответственный.ФизЛицо.Ссылка));
	Фамилия  = ФИОСрез.Фамилия;
	Имя      = ФИОСрез.Имя;
	Отчество = ФИОСрез.Отчество;
	ФамилияИмяОтчествоОтветственного = Фамилия + " " + Имя + " " + Отчество;
	ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	//Гагин Н.А. Конец	
	ТекстПБОЮЛ = ПолучитьФИОПредпринимателя(Шапка.Организация, СсылкаНаОбъект.Дата, Шапка.ЮрФизЛицо);
	ДанныеДляПечати.Вставить("ФИОПБОЮЛ", 			  ТекстПБОЮЛ);
	
	Если ЗначениеЗаполнено(ТекстПБОЮЛ) Тогда
		// Если это ИЧП
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "ОГРНИП: " + Шапка.ОГРН);
	Иначе
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "");
	КонецЕсли;
	
	Товары = ИнициализацияТаблицыСтрок();
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.Товар;
		Строчка.ТоварНаименование   = ВыборкаСтрокТовары.ТоварНаименование;
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ВыборкаСтрокТовары.ПредставлениеСтраны;
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ПредставлениеЕдиницыИзмерения;
		Строчка.Цена                = ВыборкаСтрокТовары.Сумма;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма;
		Строчка.СуммаНДС            = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.СтавкаНДС           = ВыборкаСтрокТовары.СтавкаНДС;
		
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);
	
	Возврат ДанныеДляПечати;
	
КонецФункции // СобратьДанныеПоПередачеОС()

// Функция собирает данные по текущему документу в случае, если это СФ на аванс
// 
Функция СобратьДанныеСФнаАванс()
	Если не СсылкаНаОбъект.НаАванс Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	мНадписьПредоплата = ?(СсылкаНаОбъект.Дата >= '20060101',"Предварительный платеж","Авансовый платеж");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Номер,
	|	СчетФактураВыданный.Дата,
	|	СчетФактураВыданный.Организация КАК Поставщик,
	|	СчетФактураВыданный.Организация КАК Грузоотправитель,
	|	СчетФактураВыданный.Организация.ЮрФизЛицо КАК ЮрФизЛицо,
	|	СчетФактураВыданный.Организация.ОГРН КАК ОГРН,
	|	СчетФактураВыданный.Контрагент КАК Покупатель,
	|	СчетФактураВыданный.Контрагент КАК Грузополучатель,
	|	&ВалютаРегламентированногоУчета КАК Валюта,
	|	СчетФактураВыданный.Сумма КАК Сумма
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Ссылка = &Ссылка";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Шапка.Номер);
	ДанныеДляПечати.Вставить("Дата",             Шапка.Дата);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Истина);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Истина);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Шапка.Организация, СсылкаНаОбъект.Дата,);
	//ДанныеДляПечати.Вставить("ФИОРуководителя",       Руководители.Руководитель);
	//ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	
	//Гагин Н.А. Начало	
	ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",СсылкаНаОбъект.Ссылка.Ответственный.ФизЛицо.Ссылка));
	Фамилия  = ФИОСрез.Фамилия;
	Имя      = ФИОСрез.Имя;
	Отчество = ФИОСрез.Отчество;
	ФамилияИмяОтчествоОтветственного = Фамилия + " " + Имя + " " + Отчество;
	ДанныеДляПечати.Вставить("ФИОРуководителя",       ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", ОбщегоНазначения.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтветственного));
	//Гагин Н.А. Конец	
	
	
	ТекстПБОЮЛ = ПолучитьФИОПредпринимателя(Шапка.Организация, СсылкаНаОбъект.Дата, Шапка.ЮрФизЛицо);
	ДанныеДляПечати.Вставить("ФИОПБОЮЛ", 			  ТекстПБОЮЛ);
	
	Если ЗначениеЗаполнено(ТекстПБОЮЛ) Тогда
		// Если это ИЧП
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "ОГРНИП: " + Шапка.ОГРН);
	Иначе
		ДанныеДляПечати.Вставить("РеквизитыСвидетельства", "");
	КонецЕсли;
	
	Товары = ИнициализацияТаблицыСтрок();
	
	Строчка = Товары.Добавить();
	Строчка.Товар               = мНадписьПредоплата;
	Строчка.ТоварНаименование   = мНадписьПредоплата;
	Строчка.СтранаПроисхождения = "";
	Строчка.ПредставлениеСтраны = "";
	Строчка.НомерГТД            = "";
	Строчка.ПредставлениеГТД    = "";
	Строчка.Количество          = 0;
	Строчка.ЕдиницаИзмерения    = "";
	
	Строчка.СтавкаНДС = СсылкаНаОбъект.СтавкаНДС;
	Строчка.СуммаНДС  = СсылкаНаОбъект.СуммаНДС;
	Строчка.Сумма     = СсылкаНаОбъект.Сумма;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);
	ДанныеДляПечати.Вставить("ТолькоУслуги",   Истина);
	
	Возврат ДанныеДляПечати;
	
КонецФункции // СобратьДанныеПоСВП()



функция ПечатьНаПогрузку()
	Если Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(СсылкаНаОбъект.Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.Номенклатура,
	|	ЗаказыПокупателейОстатки.КоличествоОстаток
	|ПОМЕСТИТЬ ЗаказОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя = &ЗП) КАК ЗаказыПокупателейОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура,
	|	ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|ПОМЕСТИТЬ Зарезервировано
	|ИЗ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, ДокументРезерва = &ЗП) КАК ТоварыВРезервеНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.КоличествоЗаказ,
	|	ВложенныйЗапрос.КоличествоПартии
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказОстаток.Номенклатура КАК Номенклатура,
	|		ЗаказОстаток.КоличествоОстаток КАК КоличествоЗаказ,
	|		ЕСТЬNULL(Зарезервировано.КоличествоОстаток, 0) КАК КоличествоПартии
	|	ИЗ
	|		ЗаказОстаток КАК ЗаказОстаток
	|			ЛЕВОЕ СОЕДИНЕНИЕ Зарезервировано КАК Зарезервировано
	|			ПО ЗаказОстаток.Номенклатура = Зарезервировано.Номенклатура) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоЗаказ <> ВложенныйЗапрос.КоличествоПартии";
	
	Запрос.УстановитьПараметр("ЗП", СсылкаНаОбъект);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Отказ = Ложь;
	
	//+1Ctr@, 18.01.2022 17:52:26 27695 
	//
	//Для Каждого Стр Из Результат Цикл
	//	Сообщить("Номенклатура "+Стр.Номенклатура+" заказано "+Стр.КоличествоЗаказ+" размещено "+Стр.КоличествоПартии);
	//	Отказ = Истина;
	//КонецЦикла;
	Для Каждого Стр Из Результат Цикл
		Если НЕ Стр.Номенклатура.Услуга Тогда
			Сообщить("Номенклатура "+Стр.Номенклатура+" заказано "+Стр.КоличествоЗаказ+" размещено "+Стр.КоличествоПартии);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	//-1Ctr@, 18.01.2022 17:52:26
	
	Если Отказ Тогда
		Сообщить("Без указания размещения печать сборочного листа не возможна!");
		Возврат Неопределено;
	КонецЕсли; 	
	
	ИтогФорма = НЕОПРЕДЕЛЕНО;
	БезУслуг = Истина;
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПустойКонтрагент",    Справочники.Контрагенты.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Дата КАК ДатаДокумента,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Организация КАК ЮрФизЛицо,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	РеализацияТоваровУслуг.Организация КАК Контрагент,
	|	РеализацияТоваровУслуг.Организация КАК Руководители,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА РеализацияТоваровУслуг.Контрагент
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА РеализацияТоваровУслуг.Организация
	|		ИНАЧЕ РеализацияТоваровУслуг.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчет,
	|	РеализацияТоваровУслуг.Контрагент КАК Покупатель,
	|	РеализацияТоваровУслуг.Контрагент КАК Плательщик,
	|	РеализацияТоваровУслуг.Комментарий,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.Представление КАК Основание,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
	|	ОЛ.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	РеализацияТоваровУслуг.Подразделение,
	|	РеализацияТоваровУслуг.ВалютаДокумента,
	|	РеализацияТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	РеализацияТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	РеализацияТоваровУслуг.УчитыватьНДС,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОЛ
	|		ПО (ОЛ.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.БанковскийСчетОрганизации","ЗаказПокупателя.СтруктурнаяЕдиница");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Склад","ЗаказПокупателя.СкладГруппа");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг","ЗаказПокупателя");	
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.СкладГруппа);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.БанковскийСчетОрганизации","Значение(Справочник.БанковскиеСчета.ПустаяСсылка)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Контрагент","Значение(Справочник.Контрагенты.ПустаяСсылка)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Грузополучатель","Значение(Справочник.Контрагенты.ПустаяСсылка)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Грузоотправитель","Значение(Справочник.Контрагенты.ПустаяСсылка)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.АдресДоставки","""""");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.ДоговорКонтрагента.Представление","""""");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.ДоговорКонтрагента.ВедениеВзаиморасчетов","""""");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.Склад","ПеремещениеТоваров.СкладОтправитель");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.УчитыватьНДС","ЛОЖЬ");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.КурсВзаиморасчетов","0");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.КратностьВзаиморасчетов","0");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.ВалютаДокумента","Значение(Справочник.Валюты.ПустаяСсылка)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг.СуммаВключаетНДС","ЛОЖЬ");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"РеализацияТоваровУслуг","ПеремещениеТоваров");	
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.СкладОтправитель);
	Иначе
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СсылкаНаОбъект.Склад);
		
	КонецЕсли;
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ТекущийДокумент2", СсылкаНаОбъект);
	Если НЕ ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Если СсылкаНаОбъект.ВалютаДокумента = СсылкаНаОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
			// Документ оформлен в валюте взаиморасчетов
			Запрос.УстановитьПараметр("Курс", СсылкаНаОбъект.КурсВзаиморасчетов);
			Запрос.УстановитьПараметр("Кратность", СсылкаНаОбъект.КратностьВзаиморасчетов);
		Иначе
			// Документ оформлен в валюте регламентированного учета
			Запрос.УстановитьПараметр("Курс", 1);
			Запрос.УстановитьПараметр("Кратность", 1);
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЗ.Номенклатура КАК Номенклатура,
	|	ВЗ.Номенклатура.Код КАК ТоварКод,
	|	ВЗ.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВЗ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВЗ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЗ.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВЗ.Характеристика КАК Характеристика,
	|	ВЗ.Серия КАК Серия,
	|	ВЗ.СтавкаНДС КАК СтавкаНДС,
	|	ВЗ.Цена КАК Цена,
	|	ВЗ.Сумма КАК Сумма,
	|	ВЗ.СуммаНДС КАК СуммаНДС,
	|	ВЗ.НомерСтроки КАК НомерСтроки,
	|	ВЗ.Метка КАК Метка,
	|	ВЗ.Номенклатура.Наименование КАК ТоварНаименование,
	|	ВЗ.Количество,
	|	ВЗ.Артикул
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент КАК Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент КАК КоэффициентМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры КАК Характеристика,
	|		РеализацияТоваровУслуг.СерияНоменклатуры КАК Серия,
	|		РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность КАК Цена,
	|		РеализацияТоваровУслуг.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		РеализацияТоваровУслуг.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|		СУММА(РеализацияТоваровУслуг.Сумма * &Курс / &Кратность) КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|		0 КАК Метка,
	|		РеализацияТоваровУслуг.Количество КАК Количество,
	|		РеализацияТоваровУслуг.Номенклатура.Артикул КАК Артикул
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.ХарактеристикаНоменклатуры,
	|		РеализацияТоваровУслуг.СерияНоменклатуры,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена,
	|		РеализацияТоваровУслуг.ПроцентСкидкиНаценки,
	|		РеализацияТоваровУслуг.ПроцентАвтоматическихСкидок,
	|		РеализацияТоваровУслуг.ЕдиницаИзмеренияМест.Коэффициент,
	|		РеализацияТоваровУслуг.Количество,
	|		РеализацияТоваровУслуг.Номенклатура.Артикул) КАК ВЗ";
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Количество,
		|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
		|	0 КАК НомерСтроки,
		|	ВложенныйЗапрос.Номенклатура.Наименование КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
		|	"""" КАК Серия,
		|	0 КАК Метка,
		|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
		|	ВложенныйЗапрос.ЕдиницаИзмерения1 КАК БазоваяЕдиницаНаименование
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказыПокупателей.Номенклатура КАК Номенклатура,
		|		СУММА(ВЫБОР
		|				КОГДА ЗаказыПокупателей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА 1
		|				ИНАЧЕ 1
		|			КОНЕЦ * ЗаказыПокупателей.Количество) КАК Количество,
		|		ЗаказыПокупателей.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ЗаказыПокупателей.СтавкаНДС КАК СтавкаНДС,
		|		ЗаказыПокупателей.Цена КАК Цена,
		|		СУММА(ВЫБОР
		|				КОГДА ЗаказыПокупателей.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|					ТОГДА 1
		|				ИНАЧЕ 1
		|			КОНЕЦ * ЗаказыПокупателей.СуммаВзаиморасчетов) КАК Сумма,
		|		ЗаказыПокупателей.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		ЗаказыПокупателей.ЕдиницаИзмерения КАК ЕдиницаИзмерения1
		|	ИЗ
		|		РегистрНакопления.ЗаказыПокупателей КАК ЗаказыПокупателей
		|	ГДЕ
		|		ЗаказыПокупателей.ЗаказПокупателя = &ТекущийДокумент
		|		И (ЗаказыПокупателей.Регистратор ССЫЛКА Документ.ЗаказПокупателя
		|				ИЛИ ЗаказыПокупателей.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПокупателя)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗаказыПокупателей.Номенклатура,
		|		ЗаказыПокупателей.ЕдиницаИзмерения,
		|		ЗаказыПокупателей.СтавкаНДС,
		|		ЗаказыПокупателей.Цена,
		|		ЗаказыПокупателей.ХарактеристикаНоменклатуры,
		|		ЗаказыПокупателей.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Количество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварНаименование";	
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда				   
		Запрос.Текст = "ВЫБРАТЬ
		|	ПТТ.Номенклатура,
		|	ПТТ.Номенклатура.Код КАК ТоварКод,
		|	ПТТ.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
		|	ПТТ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ПТТ.ЕдиницаИзмерения,
		|	ПТТ.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
		|	ПТТ.ХарактеристикаНоменклатуры КАК Характеристика,
		|	ПТТ.СерияНоменклатуры КАК Серия,
		|	""СтавкаНДС"" КАК СтавкаНДС,
		|	ПТТ.Цена КАК Цена,
		|	СУММА(ПТТ.Цена * ПТТ.Количество) КАК Сумма,
		|	0 КАК СуммаНДС,
		|	ПТТ.НомерСтроки,
		|	0 КАК Метка,
		|	ПТТ.Номенклатура.Наименование КАК ТоварНаименование,
		|	СУММА(ПТТ.Количество) КАК Количество,
		|	ПТТ.Номенклатура.Артикул КАК Артикул
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПТТ
		|ГДЕ
		|	ПТТ.Ссылка = &ТекущийДокумент
		|
		|СГРУППИРОВАТЬ ПО
		|	ПТТ.ЕдиницаИзмеренияМест.Представление,
		|	ПТТ.Номенклатура,
		|	ПТТ.ЕдиницаИзмерения,
		|	ПТТ.ХарактеристикаНоменклатуры,
		|	ПТТ.СерияНоменклатуры,
		|	ПТТ.Номенклатура.Код,
		|	ПТТ.ЕдиницаИзмерения.Представление,
		|	ПТТ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
		|	ПТТ.Цена,
		|	ПТТ.НомерСтроки,
		|	ПТТ.Номенклатура.Наименование,
		|	ПТТ.Номенклатура.Артикул";					   
	КонецЕсли;
	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	ЗапросТовары.Сортировать("НомерСтроки Возр");
	
	ТабДокумент  = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("НакладнаяНаПогрузку");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Накл = "Сборочный лист № "+Строка(СсылкаНаОбъект.Номер)+" от "+Строка(Формат(СсылкаНаОбъект.Дата,"ДЛФ=ДД"));
	ОбластьМакета.Параметры.ДатаПечати = "напечатано: "+ТекущаяДата()+" "+ПараметрыСеанса.ТекущийПользователь;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОбластьМакета.Параметры.СкладГруппа = Строка(СсылкаНаОбъект.СкладОтправитель.Наименование);
	Иначе
		ОбластьМакета.Параметры.СкладГруппа = Строка(СсылкаНаОбъект.СкладГруппа.Наименование);
	КонецЕсли;
	
	Сведенья = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента);
	СведенияПост = Новый Структура("ПолноеНаименование");
	ЗаполнитьЗначенияСвойств(СведенияПост,Сведенья);
	ОбластьМакета.Параметры.Поставщик = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияПост);
	ОбластьМакета.Параметры.Менеджер = ?(ТипЗнч(СсылкаНаОбъект)=Тип("ДокументСсылка.ЗаказПокупателя"),СсылкаНаОбъект.Менеджер,"");
	Сведенья = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияПок = Новый Структура("ПолноеНаименование, ИНН, ЮридическийАдрес");
	ЗаполнитьЗначенияСвойств(СведенияПок,Сведенья);
	ОбластьМакета.Параметры.Покупатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияПок);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	ИтогоКоличество  = 0;
	
	ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаКомплектующие           = Макет.ПолучитьОбласть("Строка1");
	ОбластьМакетаКомплектующиеРасшифровка = Макет.ПолучитьОбласть("Строка3");
	Товары = ЗапросТовары.ВыгрузитьКОЛОНКУ("Номенклатура");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаказыПокупателей.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказыПокупателей.Количество) КАК Количество
	|ПОМЕСТИТЬ КоличествоЗаказ
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей КАК ЗаказыПокупателей
	|ГДЕ
	|	ЗаказыПокупателей.ЗаказПокупателя = &ТекущийДокумент
	|	И (ЗаказыПокупателей.Регистратор ССЫЛКА Документ.ЗаказПокупателя
	|			ИЛИ ЗаказыПокупателей.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПокупателя)
	|	И ЗаказыПокупателей.Номенклатура.ИТА_Комплект
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПокупателей.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектацияНоменклатурыКомплектующие.Ссылка КАК дКН,
	|	КомплектацияНоменклатурыКомплектующие.Ссылка.Номенклатура КАК Комплект,
	|	КоличествоЗаказ.Количество КАК КоличествоЗаказано,
	|	КомплектацияНоменклатурыКомплектующие.Ссылка.Количество КАК КоличествоКомплекта,
	|	КомплектацияНоменклатурыКомплектующие.Номенклатура КАК Комплектующая,
	|	КомплектацияНоменклатурыКомплектующие.Количество КАК КоличествоКомплектующей,
	|	КомплектацияНоменклатурыКомплектующие.НоменклатураЗаменаОсновнойКомплектации
	|ПОМЕСТИТЬ ЧтоМыСкомплектовали
	|ИЗ
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоЗаказ КАК КоличествоЗаказ
	|		ПО КомплектацияНоменклатурыКомплектующие.Ссылка.Номенклатура = КоличествоЗаказ.Номенклатура
	|ГДЕ
	|	КомплектацияНоменклатурыКомплектующие.Ссылка.ДокументОснование = &ТекущийДокумент
	|	И КомплектацияНоменклатурыКомплектующие.Ссылка.Номенклатура В
	|			(ВЫБРАТЬ
	|				КоличествоЗаказ.Номенклатура
	|			ИЗ
	|				КоличествоЗаказ КАК КоличествоЗаказ
	|			СГРУППИРОВАТЬ ПО
	|				КоличествоЗаказ.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомплектующиеНоменклатуры.Номенклатура,
	|	КомплектующиеНоменклатуры.Комплектующая,
	|	КомплектующиеНоменклатуры.Количество КАК КоличествоНаКомплект
	|ПОМЕСТИТЬ ОсновнаяКомплектация
	|ИЗ
	|	РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
	|ГДЕ
	|	КомплектующиеНоменклатуры.Номенклатура В
	|			(ВЫБРАТЬ
	|				КоличествоЗаказ.Номенклатура
	|			ИЗ
	|				КоличествоЗаказ КАК КоличествоЗаказ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИТА_Аналоги.Номенклатура КАК Комплектующая,
	|	ИТА_Аналоги.Аналог
	|ПОМЕСТИТЬ АналогиКомплектующих
	|ИЗ
	|	РегистрСведений.ИТА_Аналоги КАК ИТА_Аналоги
	|ГДЕ
	|	ИТА_Аналоги.Номенклатура В
	|			(ВЫБРАТЬ
	|				ОсновнаяКомплектация.Комплектующая
	|			ИЗ
	|				ОсновнаяКомплектация КАК ОсновнаяКомплектация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновнаяКомплектация.Номенклатура,
	|	ЕСТЬNULL(АналогиКомплектующих.Аналог, ОсновнаяКомплектация.Комплектующая) КАК Комплектующая,
	|	ОсновнаяКомплектация.КоличествоНаКомплект
	|ПОМЕСТИТЬ АльтернативнаяКомплектация
	|ИЗ
	|	ОсновнаяКомплектация КАК ОсновнаяКомплектация
	|		ЛЕВОЕ СОЕДИНЕНИЕ АналогиКомплектующих КАК АналогиКомплектующих
	|		ПО ОсновнаяКомплектация.Комплектующая = АналогиКомплектующих.Комплектующая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Комплект,
	|	ВложенныйЗапрос.КоличествоЗаказано,
	|	ВложенныйЗапрос.КоличествоКомплекта,
	|	ВложенныйЗапрос.Комплектующая,
	|	ВложенныйЗапрос.КоличествоКомплектующей,
	|	ВложенныйЗапрос.КоличествоНаКомплект,
	|	ВложенныйЗапрос.ОК_Комплектующая,
	|	ВложенныйЗапрос.Приоритет,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Приоритет = 0
	|			ТОГДА (ВложенныйЗапрос.КоличествоЗаказано - ВложенныйЗапрос.КоличествоКомплекта) * ВложенныйЗапрос.КоличествоНаКомплект
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДополнитьОК
	|ПОМЕСТИТЬ ПочтиГотово
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Комплект КАК Комплект,
	|		ВложенныйЗапрос.КоличествоЗаказано КАК КоличествоЗаказано,
	|		СУММА(ВложенныйЗапрос.КоличествоКомплекта) КАК КоличествоКомплекта,
	|		ВложенныйЗапрос.Комплектующая КАК Комплектующая,
	|		СУММА(ВложенныйЗапрос.КоличествоКомплектующей) КАК КоличествоКомплектующей,
	|		ВложенныйЗапрос.КоличествоНаКомплект КАК КоличествоНаКомплект,
	|		ВложенныйЗапрос.ОК_Комплектующая КАК ОК_Комплектующая,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.Комплектующая = ВложенныйЗапрос.ОК_Комплектующая
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Приоритет
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВложенныйЗапрос.дКН КАК дКН,
	|			ВложенныйЗапрос.Комплект КАК Комплект,
	|			ВложенныйЗапрос.КоличествоЗаказано КАК КоличествоЗаказано,
	|			ВложенныйЗапрос.КоличествоКомплекта КАК КоличествоКомплекта,
	|			ВложенныйЗапрос.Комплектующая КАК Комплектующая,
	|			ВложенныйЗапрос.КоличествоКомплектующей КАК КоличествоКомплектующей,
	|			ВложенныйЗапрос.КоличествоНаКомплект КАК КоличествоНаКомплект,
	|			ЕСТЬNULL(ВложенныйЗапрос.ОК_Комплектующая, АналогиКомплектующих.Комплектующая) КАК ОК_Комплектующая
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЧтоМыСкомплектовали.дКН КАК дКН,
	|				ЧтоМыСкомплектовали.Комплект КАК Комплект,
	|				ЧтоМыСкомплектовали.КоличествоЗаказано КАК КоличествоЗаказано,
	|				ЧтоМыСкомплектовали.КоличествоКомплекта КАК КоличествоКомплекта,
	|				ЧтоМыСкомплектовали.Комплектующая КАК Комплектующая,
	|				ЧтоМыСкомплектовали.КоличествоКомплектующей КАК КоличествоКомплектующей,
	|				ОсновнаяКомплектация.КоличествоНаКомплект КАК КоличествоНаКомплект,
	|				ОсновнаяКомплектация.Комплектующая КАК ОК_Комплектующая
	|			ИЗ
	|				ЧтоМыСкомплектовали КАК ЧтоМыСкомплектовали
	|					ЛЕВОЕ СОЕДИНЕНИЕ ОсновнаяКомплектация КАК ОсновнаяКомплектация
	|					ПО ЧтоМыСкомплектовали.Комплект = ОсновнаяКомплектация.Номенклатура
	|						И (ЧтоМыСкомплектовали.Комплектующая = ОсновнаяКомплектация.Комплектующая
	|							ИЛИ ЧтоМыСкомплектовали.НоменклатураЗаменаОсновнойКомплектации = ОсновнаяКомплектация.Комплектующая)) КАК ВложенныйЗапрос
	|				ЛЕВОЕ СОЕДИНЕНИЕ АналогиКомплектующих КАК АналогиКомплектующих
	|				ПО (ВложенныйЗапрос.ОК_Комплектующая ЕСТЬ NULL )
	|					И ВложенныйЗапрос.Комплектующая = АналогиКомплектующих.Аналог) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Комплект,
	|		ВложенныйЗапрос.КоличествоЗаказано,
	|		ВложенныйЗапрос.Комплектующая,
	|		ВложенныйЗапрос.КоличествоНаКомплект,
	|		ВложенныйЗапрос.ОК_Комплектующая,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.Комплектующая = ВложенныйЗапрос.ОК_Комплектующая
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Комплект,
	|	ВложенныйЗапрос.Комплектующая,
	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоНаКомплект, 1) КАК КоличествоНаКомплект,
	|	ВложенныйЗапрос.КоличествоЗаказано,
	|	ВложенныйЗапрос.КоличествоКомплекта,
	|	ВложенныйЗапрос.КоличествоКомплектующей + ВложенныйЗапрос.КоличествоДополнитьОК * ЕСТЬNULL(ВложенныйЗапрос.КоличествоНаКомплект, 1) КАК КоличествоКомплектующей,
	|	ВложенныйЗапрос.ОК_Комплектующая,
	|	ВложенныйЗапрос.Приоритет,
	|	ВложенныйЗапрос.КоличествоДополнитьОК
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Комплект КАК Комплект,
	|		ВложенныйЗапрос.Комплектующая КАК Комплектующая,
	|		ВложенныйЗапрос.КоличествоНаКомплект КАК КоличествоНаКомплект,
	|		СУММА(ВложенныйЗапрос.КоличествоЗаказано) КАК КоличествоЗаказано,
	|		СУММА(ВложенныйЗапрос.КоличествоКомплекта) КАК КоличествоКомплекта,
	|		СУММА(ВложенныйЗапрос.КоличествоКомплектующей) КАК КоличествоКомплектующей,
	|		ВложенныйЗапрос.ОК_Комплектующая КАК ОК_Комплектующая,
	|		СУММА(ВложенныйЗапрос.Приоритет) КАК Приоритет,
	|		СУММА(ВложенныйЗапрос.КоличествоДополнитьОК) КАК КоличествоДополнитьОК
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПочтиГотово.Комплект КАК Комплект,
	|			ПочтиГотово.Комплектующая КАК Комплектующая,
	|			ПочтиГотово.КоличествоНаКомплект КАК КоличествоНаКомплект,
	|			ПочтиГотово.КоличествоЗаказано КАК КоличествоЗаказано,
	|			ПочтиГотово.КоличествоКомплекта КАК КоличествоКомплекта,
	|			ПочтиГотово.КоличествоКомплектующей КАК КоличествоКомплектующей,
	|			ПочтиГотово.ОК_Комплектующая КАК ОК_Комплектующая,
	|			ПочтиГотово.Приоритет КАК Приоритет,
	|			ПочтиГотово.КоличествоДополнитьОК КАК КоличествоДополнитьОК
	|		ИЗ
	|			ПочтиГотово КАК ПочтиГотово
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ОсновнаяКомплектация.Номенклатура,
	|			ОсновнаяКомплектация.Комплектующая,
	|			ОсновнаяКомплектация.КоличествоНаКомплект,
	|			0,
	|			0,
	|			0,
	|			ОсновнаяКомплектация.Комплектующая,
	|			0,
	|			0
	|		ИЗ
	|			ОсновнаяКомплектация КАК ОсновнаяКомплектация) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ОК_Комплектующая,
	|		ВложенныйЗапрос.Комплект,
	|		ВложенныйЗапрос.Комплектующая,
	|		ВложенныйЗапрос.КоличествоНаКомплект) КАК ВложенныйЗапрос";
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ КоличествоЗаказ
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Номенклатура.ИТА_Комплект
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеТоваровТовары.Номенклатура "+Прав(Запрос.Текст,СтрДлина(Запрос.Текст)-СтрДлина("ВЫБРАТЬ
		|	ЗаказыПокупателей.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказыПокупателей.Количество) КАК Количество
		|ПОМЕСТИТЬ КоличествоЗаказ
		|ИЗ
		|	РегистрНакопления.ЗаказыПокупателей КАК ЗаказыПокупателей
		|ГДЕ
		|	ЗаказыПокупателей.ЗаказПокупателя = &ТекущийДокумент
		|	И (ЗаказыПокупателей.Регистратор ССЫЛКА Документ.ЗаказПокупателя
		|			ИЛИ ЗаказыПокупателей.Регистратор ССЫЛКА Документ.КорректировкаЗаказаПокупателя)
		|	И ЗаказыПокупателей.Номенклатура.ИТА_Комплект
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПокупателей.Номенклатура"));
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекущийДокумент",    СсылкаНаОбъект);
	Комплектующие = Запрос.Выполнить().Выгрузить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КНК.Ссылка.Номенклатура,
	|	КНК.Номенклатура.Артикул КАК Артикул,
	|	КНК.Номенклатура КАК ТоварНаименование,
	|	СУММА(КНК.Количество) КАК Количество
	|ИЗ
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК КНК
	|ГДЕ
	|	КНК.Ссылка.ДокументОснование = &ТекДок
	|	И КНК.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	КНК.Ссылка.Номенклатура,
	|	КНК.Номенклатура";
	
	Запрос.УстановитьПараметр("ТекДок",СсылкаНаОбъект );
	
	РасшифровкаКомплектации = Запрос.Выполнить().Выгрузить();
	
	ВсегоПрименяемостьКомплектующих = Новый ТаблицаЗначений;
	ВсегоПрименяемостьКомплектующих.Колонки.Добавить("Номенклатура");
	ВсегоПрименяемостьКомплектующих.Колонки.Добавить("Количество");
	СоответсвиеНГ = Новый ТаблицаЗначений;
	СоответсвиеНГ.Колонки.Добавить("НГ");
	СоответсвиеНГ.Колонки.Добавить("Кол");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		НГ = ВыборкаСтрок.Номенклатура.НоменклатурнаяГруппа;
		стрНГ = СоответсвиеНГ.Найти(НГ,"НГ");
		Если стрНГ = Неопределено Тогда
			стрНГ = СоответсвиеНГ.Добавить();
			стрНГ.НГ = НГ;
			стрНГ.Кол = 0;
		КонецЕсли;
		стрНГ.Кол = стрНГ.Кол + ВыборкаСтрок.Количество;
		ОбластьМакета.Параметры.Номер             = ЗапросТовары.Индекс(ВыборкаСтрок) + 1;
		ОбластьМакета.Параметры.Артикул             = 	СокрЛП(ВыборкаСтрок.Артикул);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование)
		+ ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаСтрок)
		+ ?(ВыборкаСтрок.Метка = 2, " (возвратная тара)", "");
		ОбластьМакета.Параметры.Количество  = ВыборкаСтрок.Количество;
		ОбластьМакета.Параметры.НГ  = СоответсвиеНГ.Индекс(стрНГ)+1;
		ОбластьМакета.Параметры.Единица = ВыборкаСтрок.БазоваяЕдиницаНаименование;
		Количество  = ВыборкаСтрок.Количество;
		ИтогоКоличество  = ИтогоКоличество  + Количество;
		ТабДокумент.Вывести(ОбластьМакета);
		Если ВыборкаСтрок.Номенклатура.ИТА_Комплект Тогда
			СтрокиКомплектации = Комплектующие.Скопировать(Новый Структура("Комплект",ВыборкаСтрок.Номенклатура));
			Если СтрокиКомплектации.Количество() Тогда
				МассивПропускаемыхСтрок = Новый Массив;	
				Для Каждого СтрКомпл Из СтрокиКомплектации Цикл
					Если МассивПропускаемыхСтрок.Найти(СтрКомпл)<> Неопределено Тогда
						Продолжить;	
					КонецЕсли;
					ОбластьМакетаКомплектующие.Параметры.Артикул             = 	СокрЛП(СтрКомпл.Комплектующая.Артикул);
					ОбластьМакетаКомплектующие.Параметры.ТоварНаименование = СокрЛП(СтрКомпл.Комплектующая.Наименование);
					ОбластьМакетаКомплектующие.Параметры.Количество = СокрЛП(СтрКомпл.КоличествоНаКомплект);
					ТабДокумент.Вывести(ОбластьМакетаКомплектующие);
					СтрокиКомплектующей = СтрокиКомплектации.НайтиСтроки(Новый Структура("ОК_Комплектующая",СтрКомпл.ОК_Комплектующая));
					Если СтрокиКомплектующей.Количество() > 1 Тогда
						
						Для Каждого СтрКомплАналог Из СтрокиКомплектующей Цикл
							МассивПропускаемыхСтрок.Добавить(СтрКомплАналог);
							ОбластьМакетаКомплИлиАналог = Макет.ПолучитьОбласть("Строка4");
							ОбластьМакетаКомплИлиАналог.Параметры.ПризнакКоплектующей = ?(СтрКомплАналог.Приоритет = 0,"Комплектующая","Аналог");
							ОбластьМакетаКомплИлиАналог.Параметры.Артикул             = СокрЛП(СтрКомплАналог.Комплектующая.Артикул);
							ОбластьМакетаКомплИлиАналог.Параметры.Комплектующая = СокрЛП(СтрКомплАналог.Комплектующая.Наименование);
							ОбластьМакетаКомплИлиАналог.Параметры.Количество = СокрЛП(СтрКомплАналог.КоличествоКомплектующей);
							ТабДокумент.Вывести(ОбластьМакетаКомплИлиАналог);
						КонецЦикла;
					КонецЕсли;
					
					//	ОбластьМакетаКомплектующие.Параметры.Артикул             = 	СокрЛП(СтрКомпл.Комплект.Артикул);
					//	ОбластьМакетаКомплектующие.Параметры.ТоварНаименование = СокрЛП(СтрКомпл.Комплект.Наименование);
					//	ОбластьМакетаКомплектующие.Параметры.Количество = СокрЛП(СтрКомпл.Количество);
					//	ТабДокумент.Вывести(ОбластьМакетаКомплектующие);
					//	строкиРК = РасшифровкаКомплектации.НайтиСтроки(Новый Структура("Номенклатура,ТоварНаименование",ВыборкаСтрок.Номенклатура,СтрКомпл.Комплектующая));
					//	Для Каждого сРК Из строкиРК Цикл
					//		ОбластьМакетаКомплектующиеРасшифровка.Параметры.Артикул = СокрЛП(сРК.Артикул);		
					//		ОбластьМакетаКомплектующиеРасшифровка.Параметры.ТоварНаименование = СокрЛП(сРК.ТоварНаименование);		
					//		ОбластьМакетаКомплектующиеРасшифровка.Параметры.Количество = СокрЛП(сРК.Количество);		
					//		ТабДокумент.Вывести(ОбластьМакетаКомплектующиеРасшифровка);	
					//	КонецЦикла;
					//	
					//	СтрВПК = ВсегоПрименяемостьКомплектующих.Найти(СтрКомпл.Комплектующая);
					//	Если СтрВПК = Неопределено Тогда
					//		СтрВПК = ВсегоПрименяемостьКомплектующих.Добавить();
					//		СтрВПК.Номенклатура = СтрКомпл.Комплектующая;
					//		СтрВПК.Количество = 0;
					//	КонецЕсли;
					//	СтрВПК.Количество = СтрВПК.Количество+(СтрКомпл.Количество*Количество);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогКоличество  = ИтогоКоличество;
	ТабДокумент.Вывести(ОбластьМакета);
	Если СоответсвиеНГ.Количество() Тогда
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаНГ");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		ОбластьМакета           = Макет.ПолучитьОбласть("СтрокаНГ");
		Для Каждого Стр Из СоответсвиеНГ Цикл
			ОбластьМакета.Параметры.ннГ = СоответсвиеНГ.Индекс(Стр)+1;
			ОбластьМакета.Параметры.НаименованиеНГ = СокрЛП(Стр.НГ);
			ОбластьМакета.Параметры.КоличествоНГ  = Стр.Кол;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	//Если ВсегоПрименяемостьКомплектующих.Количество() Тогда
	//	ВсегоПрименяемостьКомплектующих.Сортировать("Номенклатура");
	//	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб1");
	//	ТабДокумент.Вывести(ЗаголовокТаблицы);
	//	ОбластьМакета           = Макет.ПолучитьОбласть("Строка2");
	//	Для Каждого Стр Из ВсегоПрименяемостьКомплектующих Цикл
	//		ОбластьМакета.Параметры.Артикул = СокрЛП(Стр.Номенклатура.Артикул);
	//		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Стр.Номенклатура);
	//		ОбластьМакета.Параметры.Количество  = Стр.Количество;
	//		ТабДокумент.Вывести(ОбластьМакета);
	//	КонецЦикла;
	//
	//	ОбластьМакета = Макет.ПолучитьОбласть("Итого2");
	// 	ТабДокумент.Вывести(ОбластьМакета);
	//КонецЕсли;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	СУММА(ЗПТ.Количество) КАК Количество,
		|	СРЕДНЕЕ(ЗПТ.ЕдиницаИзмерения.Вес) КАК ЕдиницаИзмеренияВес,
		|	СРЕДНЕЕ(ЗПТ.ЕдиницаИзмерения.Объем) КАК ЕдиницаИзмеренияОбъем,
		|	СУММА(ЗПТ.Количество * ЗПТ.ЕдиницаИзмерения.Вес) КАК Вес,
		|	СУММА(ЗПТ.Количество * ЗПТ.ЕдиницаИзмерения.Объем) КАК Объем
		|ИЗ
		|	Документ.ЗаказПокупателя.Товары КАК ЗПТ
		|ГДЕ
		|	ЗПТ.Ссылка = &Ссылка");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда				   
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
		|	СРЕДНЕЕ(ПеремещениеТоваровТовары.ЕдиницаИзмерения.Вес) КАК ЕдиницаИзмеренияВес,
		|	СРЕДНЕЕ(ПеремещениеТоваровТовары.ЕдиницаИзмерения.Объем) КАК ЕдиницаИзмеренияОбъем,
		|	СУММА(ПеремещениеТоваровТовары.Количество * ПеремещениеТоваровТовары.ЕдиницаИзмерения.Вес) КАК Вес,
		|	СУММА(ПеремещениеТоваровТовары.Количество * ПеремещениеТоваровТовары.ЕдиницаИзмерения.Объем) КАК Объем
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Ссылка");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка",СсылкаНаОбъект);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() Тогда
		ВесОбъем = "Объем: "+Результат[0].Объем+" "+СокрЛП(Константы.ЕдиницаИзмеренияОбъема.Получить())+" , Вес: "+Результат[0].Вес+" Кг";
	Иначе
		ВесОбъем = "В заказе "+СсылкаНаОбъект+" нет товаров ";
	КонецЕсли;
	
	Подвал = Макет.ПолучитьОбласть("Подвал");	
	Подвал.Параметры.КоличествоПрописью = ЧислоПрописью(ИтогоКоличество, ,",,,,,,,,0");
	Подвал.Параметры.Комментарий = "Комментарий: "+Шапка.Комментарий;
	Подвал.Параметры.ВесОбъем = ВесОбъем;
	ТабДокумент.Вывести(Подвал);
	
	ИтогФорма = ТабДокумент;
	Возврат ИтогФорма;
КонецФункции

Функция Печать() Экспорт
	Возврат ПечатьНаПогрузку();
КонецФункции

